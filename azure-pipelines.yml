# Define two variables in your build pipeline in the web UI:
# dockerId: Your Docker ID for Docker Hub or the admin user name for the Azure Container Registry.
# dockerPassword: Your password for Docker Hub or the admin password for Azure Container Registry.
# Reference
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker
# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/docker?view=vsts

pool:
  vmImage: 'Ubuntu 16.04'

variables:
  REGISTRY_TYPE: '$(registryType)'
  DOCKER_PASSWORD: '$(dockerPassword)'
  SUBSCRIPTION_ENDPOINT: '$(AzureSubscriptionName)'
  APP_NAME: 'dtcli-webproxy'
  CONTAINER_REGISTRY: '$(containerRegistry)'
  TAG: '$(CONTAINER_REGISTRY)/$(APP_NAME):$(build.buildId)'
  TAG_LATEST: '$(CONTAINER_REGISTRY)/$(APP_NAME):latest'

steps:
- script: |
    echo REGISTRY_TYPE = $(REGISTRY_TYPE)
    echo SUBSCRIPTION_ENDPOINT = $(SUBSCRIPTION_ENDPOINT)
    echo APP_NAME = $(APP_NAME)
    echo CONTAINER_REGISTRY = $(CONTAINER_REGISTRY)
    echo TAG = $(TAG)
    echo TAG_LATEST = $(TAG_LATEST)
  displayName: 'Run time variable values'

- script: |
    sed -i 's#\"$(CONTAINER_REGISTRY)/$(APP_NAME):.*#\"$(TAG)\"#' arm/parameters.json
    head -n 20 arm/parameters.json
  displayName: 'Update ARM Docker image'

- task: Docker@1
  displayName: 'Build an image'
  inputs:
    imageName: $(TAG)

- ${{ if eq(variables['REGISTRY_TYPE'], 'docker') }}:
  - script: |
      echo Publishing to Docker
      docker login -u $(CONTAINER_REGISTRY) -p $(DOCKER_PASSWORD)
      docker push $(TAG)
      docker tag $(TAG) $(TAG_LATEST)
      docker push $(TAG_LATEST)
    displayName: 'docker hub push'

- ${{ if eq(variables['REGISTRY_TYPE'], 'azure') }}:
  - script: echo echo Publishing to Azure
  - task: Docker@1
    displayName: 'Push an image'
    inputs:
      azureSubscriptionEndpoint: $(SUBSCRIPTION_ENDPOINT)
      azureContainerRegistry: $(CONTAINER_REGISTRY)
      command: 'push'
      imageName: $(TAG)

- task: CopyFiles@2
  inputs:
    contents: arm/*.json
    targetFolder: $(Build.ArtifactStagingDirectory)

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: $(Build.ArtifactStagingDirectory)
    artifactName: ArmJsonTemplates

