# Define these variables in your build pipeline in the web UI:
# registryType: either value of 'docker' or 'azure'
# containerRegistry: required.  rjahndemoregistry.azurecr.io for azure or robjahn for docker
# dockerPassword: Your password for Docker Hub account
# Reference
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker
# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/docker?view=vsts

pool:
  vmImage: 'Ubuntu 16.04'

variables:
  SUBSCRIPTION_SERVICE_CONNECTION: "InnovationLab-Dev"
  REGISTRY_TYPE: '$(registryType)'
  DOCKER_PASSWORD: '$(dockerPassword)'
  APP_NAME: 'dtcli-webproxy'
  CONTAINER_REGISTRY: '$(containerRegistry)'
  TAG: '$(CONTAINER_REGISTRY)/$(APP_NAME):$(build.buildId)'
  TAG_LATEST: '$(CONTAINER_REGISTRY)/$(APP_NAME):latest'

steps:
- script: |
    echo REGISTRY_TYPE = $(REGISTRY_TYPE)
    echo SUBSCRIPTION_SERVICE_CONNECTION = $(SUBSCRIPTION_SERVICE_CONNECTION)
    echo APP_NAME = $(APP_NAME)
    echo CONTAINER_REGISTRY = $(CONTAINER_REGISTRY)
    echo TAG = $(TAG)
    echo TAG_LATEST = $(TAG_LATEST)
  displayName: 'Echo run-time variable values'

- script: |
    sed -i 's#<IMAGE-NAME>#$(TAG)#' arm/parameters.json
    head -n 20 arm/parameters.json
  displayName: 'Update docker image name in ARM file'

- task: Docker@1
  displayName: 'Build docker image'
  inputs:
    imageName: '$(TAG)'

- script: |
    docker login -u $(CONTAINER_REGISTRY) -p $(DOCKER_PASSWORD)
  displayName: 'Log into docker hub'
  condition: eq(variables['registryType'], 'docker')

- task: Docker@1
  displayName: 'Login to azure'
  inputs:
    azureSubscriptionEndpoint: $(SUBSCRIPTION_SERVICE_CONNECTION)
    azureContainerRegistry: $(CONTAINER_REGISTRY)
    command: login
  condition: eq(variables['registryType'], 'azure')

- script: |
    docker push $(TAG)
    docker tag $(TAG) $(TAG_LATEST)
    docker push $(TAG_LATEST)
  displayName: 'Push image to docker registry'

- task: CopyFiles@2
  displayName: 'Archive ARM json templates'
  inputs:
    contents: arm/*.json
    targetFolder: $(Build.ArtifactStagingDirectory)

- task: PublishBuildArtifacts@1
  displayName: 'Publish ARM json templates'
  inputs:
    pathtoPublish: $(Build.ArtifactStagingDirectory)
    artifactName: ArmJsonTemplates

